'''建立节点'''
class Node(object):
    '''初始化变量'''
    def __init__(self,item):
        self.elem=item
        self.prev=None
        self.next=None
    '''定义链表'''
class DoubleLinkList(object):
    def __init__(self):
        self._head=None

    "关于链表的相关操作函数"

    def is_empty(self):
        '''链表是否为空'''
        return self._head == None

    def length(self):
        '''链表长度'''
        count = 0
        cur = self._head  # 建立指针，初始位置指向头结点,用于移动便利节点
        while cur != None:
            count += 1
            cur = cur.next
        return count

    def travel(self):
        '''遍历链表'''
        cur = self._head
        while cur != None:
            print(cur.elem, end=' ')
            cur = cur.next

    def add(self, item):
        '''从头部添加元素——头插法'''
        node = Node(item)  # 函数第一步一定要新建一个Node用于添加。
        node.next = self._head
        if node.next:
            node.next.prev=node
        self._head = node

    def append(self, item):
        '''尾插法'''
        node = Node(item)
        cur = self._head
        if self._head == None:
            self._head = node
        else:
            while cur.next != None:
                cur = cur.next
            cur.next = node
            node.prev=cur

    def insert(self, pos, item):
        '''在中间任意位置添加元素'''
        node = Node(item)
        cur = self._head
        if pos < 0:
            self.add(item)
        elif pos >= ls.length():
            self.append(item)
        else:
            count = 1
            while count < pos:
                count += 1
                cur = cur.next
                node.next = cur.next
            cur.next.prev=node
            node.prev=cur
            cur.next = node

    def remove(self, item):
        '''移除链表元素'''
        cur = self._head
        # 判断是否为空
        while cur != None:
            if cur.elem == item:
                # 头结点
                if cur == self._head:
                    self._head = cur.next
                    if cur.next:
                        '''判断链表是否只有一个节点'''
                        cur.next.prev=None
                else:
                    cur.prev.next =cur.next
                    if cur.next:
                        cur.next.prev=cur.prev
                return True
            else:
                cur = cur.next

    def search(self, item):
        '''查找链表中元素是否存在'''
        cur = self._head
        while cur != None:
            if cur.elem == item:
                return True
            else:
                cur = cur.next
        return False
if __name__ == "__main__":
    dll=DoubleLinkList()
    dll.add(100)
    for i in range(10):
        dll.append(i)
    dll.travel()
    dll.remove(3)
    dll.remove(6)
    dll.add(100)
    dll.travel()
